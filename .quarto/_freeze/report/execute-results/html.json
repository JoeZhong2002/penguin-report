{
  "hash": "44d97cfcae647ff340d4f1dad474eb1e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Tutorial 6: Refactoring R Code\"\nformat: html\n---\n\n\n\n# Introduction\n\nIn this tutorial, you will refactor the code into separate scripts corresponding to each section. The dataset we will use comes from the `palmerpenguins` package, which contains measurements of penguins from three species.\n\n## Load Libraries and Data\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ndata <- read_rds(\"data/clean_data.rds\")\n```\n:::\n\n\n\n# Methods\n\nIn this section, we perform exploratory data analysis (EDA) and prepare the data for modeling.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nsummary_stats <- read_csv(\"results/summary_stats.csv\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRows: 1 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (2): mean_bill_length, mean_bill_depth\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nsummary_stats\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  mean_bill_length mean_bill_depth\n             <dbl>           <dbl>\n1             44.0            17.2\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| echo: false\nknitr::include_graphics(\"results/bill_length_plot.png\")\n```\n\n::: {.cell-output-display}\n![](results/bill_length_plot.png)\n:::\n:::\n\n\n# Model\n\nWe will fit a classification model using `tidymodels` to predict the species of a penguin based on its physical characteristics.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.3.0 ──\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n✔ broom        1.0.8     ✔ rsample      1.3.0\n✔ dials        1.4.0     ✔ tune         1.3.0\n✔ infer        1.0.8     ✔ workflows    1.2.0\n✔ modeldata    1.4.0     ✔ workflowsets 1.1.0\n✔ parsnip      1.3.1     ✔ yardstick    1.3.2\n✔ recipes      1.3.0     \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nconf_mat_res <- readRDS(\"results/confusion_matrix.rds\")\nconf_mat_res\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           Truth\nPrediction  Adelie Chinstrap Gentoo\n  Adelie        36         0      0\n  Chinstrap      1        17      0\n  Gentoo         0         0     30\n```\n\n\n:::\n:::\n\n\n\n# Conclusion\n\nIn this tutorial, we:\n\n- Loaded and cleaned the `palmerpenguins` dataset.\n- Performed exploratory data analysis.\n- Built a k-Nearest Neighbors classification model using `tidymodels`.\n- Evaluated the model's performance.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}